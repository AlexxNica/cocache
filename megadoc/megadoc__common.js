(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["megadoc__common"] = factory();
	else
		root["megadoc__common"] = factory();
})(this, function() {
return webpackJsonp_megadoc([1],{

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";module.exports = {\n\n  \"classnames\": __webpack_require__(199),\n\n  \"dom-contains\": __webpack_require__(205),\n\n  \"fuzzaldrin-plus\": __webpack_require__(190),\n\n  \"lodash\": __webpack_require__(187),\n\n  \"moment\": __webpack_require__(240),\n\n  \"react\": __webpack_require__(1),\n\n  \"react-dom\": __webpack_require__(32),\n\n  \"react-transclusion\": __webpack_require__(180),\n\n  \"urijs\": __webpack_require__(201),\n\n  \"components/AnchorableHeading\": __webpack_require__(242),\n\n  \"components/Button\": __webpack_require__(221),\n\n  \"components/Checkbox\": __webpack_require__(244),\n\n  \"components/CollapsibleGroup\": __webpack_require__(245),\n\n  \"components/ConfigReceiver\": __webpack_require__(214),\n\n  \"components/CorpusReceiver\": __webpack_require__(248),\n\n  \"components/Disqus\": __webpack_require__(249),\n\n  \"components/Document\": __webpack_require__(223),\n\n  \"components/ErrorMessage\": __webpack_require__(224),\n\n  \"components/Footer\": __webpack_require__(225),\n\n  \"components/Heading\": __webpack_require__(247),\n\n  \"components/HeadingAnchor\": __webpack_require__(243),\n\n  \"components/HighlightedText\": __webpack_require__(250),\n\n  \"components/HotItemIndicator\": __webpack_require__(251),\n\n  \"components/Icon\": __webpack_require__(213),\n\n  \"components/IndexTable\": __webpack_require__(252),\n\n  \"components/Link\": __webpack_require__(197),\n\n  \"components/MarkdownText\": __webpack_require__(226),\n\n  \"components/NotFound\": __webpack_require__(222),\n\n  \"components/Outlet\": __webpack_require__(253),\n\n  \"components/Radio\": __webpack_require__(254),\n\n  \"components/SidebarHeader\": __webpack_require__(237),\n\n  \"components/Sticky\": __webpack_require__(227),\n\n  \"components/TwoColumnLayout\": __webpack_require__(218),\n\n  \"core/AppState\": __webpack_require__(176),\n\n  \"core/CorpusAPI\": __webpack_require__(232),\n\n  \"core/DocumentURI\": __webpack_require__(208),\n\n  \"core/EventEmitter\": __webpack_require__(173),\n\n  \"core/megadoc\": __webpack_require__(255),\n\n  \"core/MetaDescriptionManager\": __webpack_require__(256),\n\n  \"core/Router\": __webpack_require__(230),\n\n  \"core/Storage\": __webpack_require__(172),\n\n  \"core/TitleManager\": __webpack_require__(257),\n\n  \"core/TokenSearcher\": __webpack_require__(189),\n\n  \"mixins/Collapsible\": __webpack_require__(246),\n\n  \"mixins/HasMetaDescription\": __webpack_require__(258),\n\n  \"mixins/HasTitle\": __webpack_require__(259),\n\n  \"mixins/JumperMixin\": __webpack_require__(260),\n\n  \"utils/classSet\": __webpack_require__(198),\n\n  \"utils/findChildByType\": __webpack_require__(219),\n\n  \"utils/invariant\": __webpack_require__(174),\n\n  \"utils/resizable\": __webpack_require__(220),\n\n  \"utils/resolvePathname\": __webpack_require__(200),\n\n  \"utils/scrollIntoView\": __webpack_require__(261),\n\n  \"utils/scrollToTop\": __webpack_require__(228) };\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-html-serializer/tmp/publicModules.js\n ** module id = 0\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./packages/megadoc-html-serializer/tmp/publicModules.js?");

/***/ },

/***/ 242:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';var React = __webpack_require__(1);\nvar HeadingAnchor = __webpack_require__(243);\nvar classSet = __webpack_require__(198);var _React$PropTypes =\nReact.PropTypes,string = _React$PropTypes.string,node = _React$PropTypes.node,bool = _React$PropTypes.bool,oneOfType = _React$PropTypes.oneOfType,number = _React$PropTypes.number;\n\nvar AnchorableHeading = React.createClass({ displayName: 'AnchorableHeading',\n  propTypes: {\n    href: string.isRequired,\n    children: node.isRequired,\n    withLink: bool,\n    level: oneOfType([number, string]).isRequired,\n    className: string },\n\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      withLink: true };\n\n  },\n\n  render: function render() {\n    var DOMTag = 'h' + this.props.level;\n\n    return (\n      React.createElement(DOMTag, { className: classSet(this.props.className, { 'anchorable-heading': true }) },\n        React.createElement(HeadingAnchor.Anchor, { href: this.props.href }),\n\n        this.props.withLink &&\n        React.createElement(HeadingAnchor.Link, { href: this.props.href }),\n\n\n        React.createElement(HeadingAnchor.Text, { children: this.props.children })));\n\n\n  } });\n\n\nmodule.exports = AnchorableHeading;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-html-serializer/ui/shared/components/AnchorableHeading.js\n ** module id = 242\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./packages/megadoc-html-serializer/ui/shared/components/AnchorableHeading.js?");

/***/ },

/***/ 243:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';var React = __webpack_require__(1);\nvar classSet = __webpack_require__(198);var _React$PropTypes =\nReact.PropTypes,string = _React$PropTypes.string,bool = _React$PropTypes.bool,node = _React$PropTypes.node;\n\nexports.Anchor = React.createClass({\n  displayName: 'HeadingAnchor.Anchor',\n\n  propTypes: {\n    href: string },\n\n\n  render: function render() {\n    return (\n      React.createElement('a', { name: this.props.href, className: 'anchorable-heading__anchor' }));\n\n  } });\n\n\nexports.Text = React.createClass({\n  displayName: 'HeadingAnchor.Text',\n\n  propTypes: {\n    children: node.isRequired },\n\n\n  render: function render() {\n    var needsWrapper = React.Children.count(this.props.children) > 1;\n\n    if (needsWrapper) {\n      return (\n        React.createElement('span', {\n          className: 'anchorable-heading__text',\n          children: this.props.children }));\n\n\n    } else\n    {\n      var child = React.Children.only(this.props.children);\n\n      return React.cloneElement(child, {\n        className: classSet(child.props.className, {\n          \"anchorable-heading__text\": true }) });\n\n\n    }\n  } });\n\n\nexports.Link = React.createClass({\n  displayName: 'HeadingAnchor.Link',\n\n  propTypes: {\n    href: string,\n    className: string,\n    trailing: bool },\n\n\n  render: function render() {\n    var className = classSet(this.props.className, {\n      \"anchorable-heading__link\": true,\n      \"anchorable-heading__link--trailing\": Boolean(this.props.trailing),\n      \"icon\": true,\n      \"icon-link\": true });\n\n\n    return (\n      React.createElement('a', { className: className, href: '#' + this.props.href, onClick: intercept }));\n\n  } });\n\n\nfunction intercept(e) {\n  e.stopPropagation();\n}\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-html-serializer/ui/shared/components/HeadingAnchor.js\n ** module id = 243\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./packages/megadoc-html-serializer/ui/shared/components/HeadingAnchor.js?");

/***/ },

/***/ 244:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";var React = __webpack_require__(1);var _React$PropTypes =\nReact.PropTypes,bool = _React$PropTypes.bool,string = _React$PropTypes.string,func = _React$PropTypes.func,any = _React$PropTypes.any;\n\nvar Checkbox = React.createClass({ displayName: \"Checkbox\",\n  propTypes: {\n    checked: bool,\n    value: string,\n    onChange: func,\n    children: any },\n\n\n  render: function render() {\n    return (\n      React.createElement(\"label\", { className: \"checkbox\" },\n        React.createElement(\"input\", {\n          type: \"checkbox\",\n          className: \"checkbox__indicator\",\n          checked: this.props.checked,\n          value: this.props.value,\n          onChange: this.props.onChange }),\n\n\n        this.props.children));\n\n\n  } });\n\n\nmodule.exports = Checkbox;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-html-serializer/ui/shared/components/Checkbox.js\n ** module id = 244\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./packages/megadoc-html-serializer/ui/shared/components/Checkbox.js?");

/***/ },

/***/ 245:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';var React = __webpack_require__(1);\nvar Collapsible = __webpack_require__(246);\nvar classSet = __webpack_require__(198);\nvar findChildByType = __webpack_require__(219);\nvar Heading = __webpack_require__(247);\nvar Icon = __webpack_require__(213);var _React$PropTypes =\n\nReact.PropTypes,oneOfType = _React$PropTypes.oneOfType,number = _React$PropTypes.number,string = _React$PropTypes.string,any = _React$PropTypes.any,func = _React$PropTypes.func;\n\nvar CollapsibleGroup = React.createClass({ displayName: 'CollapsibleGroup',\n  mixins: [Collapsible],\n\n  propTypes: {\n    tagName: string,\n    className: string,\n    children: any },\n\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      tagName: 'div' };\n\n  },\n\n  render: function render() {\n    var DOMTag = this.props.tagName;\n    var isCollapsed = this.isCollapsed();\n\n    var className = classSet({\n      'collapsible': this.isCollapsible(),\n      'collapsible--collapsed': isCollapsed });\n\n\n    return (\n      React.createElement(DOMTag, { className: className + ' ' + (this.props.className || '') },\n        this.renderHeading(),\n        !isCollapsed && this.renderBody()));\n\n\n  },\n\n  renderHeading: function renderHeading() {\n    var child = findChildByType(this.props.children, CollapsibleGroup.Heading);\n\n    if (!child) {\n      return null;\n    }\n\n    return React.cloneElement(child, {\n      onClick: this.toggleCollapsed },\n    child.props.children);\n  },\n\n  renderBody: function renderBody() {\n    return findChildByType(this.props.children, CollapsibleGroup.Body);\n  } });\n\n\nCollapsibleGroup.Heading = React.createClass({ displayName: 'Heading',\n  propTypes: {\n    level: oneOfType([string, number]),\n    onClick: func,\n    children: any },\n\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      level: '4' };\n\n  },\n\n  render: function render() {\n    return (\n      React.createElement(Heading, {\n        level: this.props.level,\n        className: 'collapsible-header',\n        onClick: this.props.onClick,\n        children: this.props.children }));\n\n\n  } });\n\n\nCollapsibleGroup.Collapser = React.createClass({ displayName: 'Collapser',\n  render: function render() {\n    return (\n      React.createElement(Icon, { className: 'collapser icon-arrow-down' }));\n\n  } });\n\n\nCollapsibleGroup.Body = React.createClass({ displayName: 'Body',\n  render: function render() {\n    return (\n      React.createElement('div', this.props));\n\n  } });\n\n\nmodule.exports = CollapsibleGroup;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-html-serializer/ui/shared/components/CollapsibleGroup.js\n ** module id = 245\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./packages/megadoc-html-serializer/ui/shared/components/CollapsibleGroup.js?");

/***/ },

/***/ 246:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';var React = __webpack_require__(1);\nvar Icon = __webpack_require__(213);\n\nvar Collapsible = {\n  propTypes: {\n    collapsible: React.PropTypes.bool,\n    expanded: React.PropTypes.bool },\n\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      collapsible: true };\n\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      collapsed: false };\n\n  },\n\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    if (nextProps.expanded && this.state.collapsed) {\n      this.setState({ collapsed: false });\n    }\n  },\n\n  expand: function expand() {\n    if (this.state.collapsed) {\n      this.setState({ collapsed: false });\n    }\n  },\n\n  renderCollapser: function renderCollapser() {\n    if (this.isCollapsible()) {\n      return React.createElement(Icon, { className: 'collapser collapsible__icon icon-arrow-down' });\n    } else\n    {\n      return null;\n    }\n  },\n\n  isCollapsed: function isCollapsed() {\n    return this.isCollapsible() && !this.props.expanded && this.state.collapsed;\n  },\n\n  isCollapsible: function isCollapsible() {\n    return !!this.props.collapsible;\n  },\n\n  toggleCollapsed: function toggleCollapsed() {\n    if (this.isCollapsible()) {\n      this.setState({\n        collapsed: !this.state.collapsed });\n\n    }\n  } };\n\n\nmodule.exports = Collapsible;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-html-serializer/ui/shared/mixins/Collapsible.js\n ** module id = 246\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./packages/megadoc-html-serializer/ui/shared/mixins/Collapsible.js?");

/***/ },

/***/ 247:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';var React = __webpack_require__(1);var _require =\n__webpack_require__(187),omit = _require.omit;var _React$PropTypes =\n\nReact.PropTypes,string = _React$PropTypes.string,number = _React$PropTypes.number,oneOfType = _React$PropTypes.oneOfType;\n\nvar startingLevel = 1;\nvar previousLevel = 1;\n\nvar Heading = React.createClass({ displayName: 'Heading',\n  statics: {\n    setStartingLevel: function setStartingLevel(level) {\n      previousLevel = startingLevel;\n      startingLevel = level;\n    },\n\n    restoreStartingLevel: function restoreStartingLevel() {\n      startingLevel = previousLevel;\n      previousLevel = 1;\n    } },\n\n\n  propTypes: {\n    parentLevel: oneOfType([string, number]),\n    level: oneOfType([string, number]) },\n\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      parentLevel: 1 };\n\n  },\n\n  render: function render() {\n    var level = Math.min(6,\n    parseInt(this.props.parentLevel || startingLevel, 10) +\n    parseInt(this.props.level, 10) -\n    1);\n\n\n    var Tag = 'h' + level;\n\n    return (\n      React.createElement(Tag, omit(this.props, ['parentLevel', 'level'])));\n\n  } });\n\n\nmodule.exports = Heading;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-html-serializer/ui/shared/components/Heading.js\n ** module id = 247\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./packages/megadoc-html-serializer/ui/shared/components/Heading.js?");

/***/ },

/***/ 248:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};var React = __webpack_require__(1);\nvar CorpusAPI = __webpack_require__(232);var\nPropTypes = React.PropTypes;\n\nvar CorpusReceiver = function CorpusReceiver(Component) {\n  return React.createClass({\n    contextTypes: {\n      corpus: PropTypes.instanceOf(CorpusAPI).isRequired },\n\n\n    render: function render() {\n      return (\n        React.createElement(Component, _extends({ corpus: this.context.corpus }, this.props)));\n\n    } });\n\n};\n\nmodule.exports = CorpusReceiver;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-html-serializer/ui/shared/components/CorpusReceiver.js\n ** module id = 248\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./packages/megadoc-html-serializer/ui/shared/components/CorpusReceiver.js?");

/***/ },

/***/ 249:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict'; /* global DISQUS:true */\n\nvar React = __webpack_require__(1);\n\nvar DOM = React.DOM;\nvar DISQUS_CONFIG = [\n'shortname', 'identifier', 'title', 'url', 'category_id'];\n\n\n// Convert underscore to camelCase\nfunction camelCase(str) {\n  return str.replace(/(_.{1})/g, function (match) {\n    return match[1].toUpperCase();\n  });\n}\n\nvar disqusAdded = false;\n\n// Stolen from https://github.com/mzabriskie/react-disqus-thread because of the\n// (not merged as of yet) fix in\n// https://github.com/mzabriskie/react-disqus-thread/pull/9/files\n//\nvar ReactDisqusThread = React.createClass({\n  displayName: 'DisqusThread',\n\n  propTypes: {\n    /*\n                * `shortname` tells the Disqus service your forum's shortname,\n                * which is the unique identifier for your website as registered\n                * on Disqus. If undefined , the Disqus embed will not load.\n                */\n    shortname: React.PropTypes.string.isRequired,\n\n    /*\n                                                   * `identifier` tells the Disqus service how to identify the\n                                                   * current page. When the Disqus embed is loaded, the identifier\n                                                   * is used to look up the correct thread. If disqus_identifier\n                                                   * is undefined, the page's URL will be used. The URL can be\n                                                   * unreliable, such as when renaming an article slug or changing\n                                                   * domains, so we recommend using your own unique way of\n                                                   * identifying a thread.\n                                                   */\n    identifier: React.PropTypes.string,\n\n    /*\n                                         * `title` tells the Disqus service the title of the current page.\n                                         * This is used when creating the thread on Disqus for the first time.\n                                         * If undefined, Disqus will use the <title> attribute of the page.\n                                         * If that attribute could not be used, Disqus will use the URL of the page.\n                                         */\n    title: React.PropTypes.string,\n\n    /*\n                                    * `url` tells the Disqus service the URL of the current page.\n                                    * If undefined, Disqus will take the window.location.href.\n                                    * This URL is used to look up or create a thread if disqus_identifier\n                                    * is undefined. In addition, this URL is always saved when a thread is\n                                    * being created so that Disqus knows what page a thread belongs to.\n                                    */\n    url: React.PropTypes.string,\n\n    /*\n                                  * `categoryId` tells the Disqus service the category to be used for\n                                  * the current page. This is used when creating the thread on Disqus\n                                  * for the first time.\n                                  */\n    categoryId: React.PropTypes.string },\n\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      shortname: null,\n      identifier: null,\n      title: null,\n      url: null,\n      categoryId: null };\n\n  },\n\n  addDisqusScript: function addDisqusScript() {\n    if (disqusAdded) {\n      return;\n    }\n\n    var child = this.disqus = document.createElement('script');\n    var parent = document.getElementsByTagName('head')[0] ||\n    document.getElementsByTagName('body')[0];\n\n    child.async = true;\n    child.type = 'text/javascript';\n    child.src = '//' + this.props.shortname + '.disqus.com/embed.js';\n\n    parent.appendChild(child);\n\n    disqusAdded = true;\n  },\n\n  removeDisqusScript: function removeDisqusScript() {\n    if (this.disqus && this.disqus.parentNode) {\n      this.disqus.parentNode.removeChild(this.disqus);\n      this.disqus = null;\n    }\n  },\n\n  componentDidMount: function componentDidMount() {\n    if (this.props.identifier) {\n      this.loadDisqus();\n    }\n  },\n\n  componentDidUpdate: function componentDidUpdate(prevProps) {\n    if (this.props.identifier !== prevProps.identifier) {\n      this.loadDisqus();\n    }\n  },\n\n  loadDisqus: function loadDisqus() {var\n    props = this.props;\n\n    DISQUS_CONFIG.filter(function (prop) {return !!props[camelCase(prop)];}).forEach(function (prop) {\n      window['disqus_' + prop] = props[camelCase(prop)];\n    });\n\n    if (typeof DISQUS !== \"undefined\") {\n      DISQUS.reset({ reload: true });\n    } else\n    {\n      this.addDisqusScript();\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    this.removeDisqusScript();\n  },\n\n  render: function render() {\n    return (\n      DOM.div(this.props,\n      DOM.div({ id: \"disqus_thread\" }),\n      DOM.noscript(null,\n      DOM.span(null,\n      'Please enable JavaScript to view the ',\n      DOM.a({ href: \"http://disqus.com/?ref_noscript\" },\n      'comments powered by Disqus.'))),\n\n\n\n\n      DOM.a(\n      {\n        href: \"http://disqus.com\",\n        className: \"dsq-brlink\" },\n\n      'blog comments powered by ',\n      DOM.span({ className: \"logo-disqus\" }, 'Disqus'))));\n\n\n\n  } });\n\n\n/**\n         * Renders a small [disqus](http://disqus.com) comment box.\n         */\nvar Disqus = React.createClass({ displayName: 'Disqus',\n  propTypes: {\n    identifier: React.PropTypes.string,\n    title: React.PropTypes.string,\n    categoryId: React.PropTypes.string,\n    pathname: React.PropTypes.string.isRequired,\n    config: React.PropTypes.shape({\n      enabled: React.PropTypes.bool,\n      shortname: React.PropTypes.string,\n      baseUrl: React.PropTypes.string }) },\n\n\n\n  render: function render() {var\n    config = this.props.config;\n    var currentPath = this.props.pathname;\n\n    if (!currentPath || this.isDisabled()) {\n      return null;\n    }\n\n    return (\n      React.createElement(ReactDisqusThread, {\n        shortname: config.shortname,\n        identifier: this.props.identifier,\n        title: this.props.title || document.title,\n        url: config.baseUrl + '/' + currentPath,\n        categoryId: this.props.categoryId }));\n\n\n  },\n\n  isDisabled: function isDisabled() {\n    return !this.props.config || this.props.config.enabled === false;\n  } });\n\n\nmodule.exports = Disqus;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-html-serializer/ui/shared/components/Disqus.js\n ** module id = 249\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./packages/megadoc-html-serializer/ui/shared/components/Disqus.js?");

/***/ },

/***/ 250:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';var React = __webpack_require__(1);var _React$PropTypes =\nReact.PropTypes,any = _React$PropTypes.any,string = _React$PropTypes.string,bool = _React$PropTypes.bool;\n\nvar HighlightedText = React.createClass({ displayName: 'HighlightedText',\n  propTypes: {\n    children: any,\n    className: string,\n    unsafe: bool },\n\n\n  render: function render() {\n    if (this.props.unsafe) {\n      return (\n        React.createElement('div', {\n          className: 'highlighted-text ' + (this.props.className || ''),\n          children: this.props.children }));\n\n\n    }\n\n    return (\n      React.createElement('div', {\n        className: 'highlighted-text ' + (this.props.className || ''),\n        dangerouslySetInnerHTML: { __html: this.props.children } }));\n\n\n  } });\n\n\nmodule.exports = HighlightedText;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-html-serializer/ui/shared/components/HighlightedText.js\n ** module id = 250\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./packages/megadoc-html-serializer/ui/shared/components/HighlightedText.js?");

/***/ },

/***/ 251:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';var React = __webpack_require__(1);\nvar moment = __webpack_require__(240);\nvar Icon = __webpack_require__(213);\nvar ConfigReceiver = __webpack_require__(214);var\nPropTypes = React.PropTypes;\nvar ConfigType = {\n  hotness: PropTypes.shape({\n    count: PropTypes.number,\n    interval: PropTypes.string }) };\n\n\n\nvar HotItemIndicator = React.createClass({ displayName: 'HotItemIndicator',\n  propTypes: {\n    config: PropTypes.shape(ConfigType).isRequired,\n    timestamp: PropTypes.string.isRequired },\n\n\n  render: function render() {\n    if (!isItemHot(this.props.config.hotness || {}, this.props.timestamp)) {\n      return null;\n    }\n\n    return (\n      React.createElement(Icon, {\n        title: 'This item is hot! It has been edited recently.',\n        className: 'icon-fire hot-item-indicator' }));\n\n\n  } });\n\n\nmodule.exports = ConfigReceiver(HotItemIndicator, ConfigType);\n\nfunction isItemHot(hotness, commitTs) {\n  var since = moment().subtract(hotness.count, hotness.interval);\n  var ts = moment(new Date(commitTs * 1000));\n\n  return !ts.isBefore(since);\n}\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-html-serializer/ui/shared/components/HotItemIndicator.js\n ** module id = 251\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./packages/megadoc-html-serializer/ui/shared/components/HotItemIndicator.js?");

/***/ },

/***/ 252:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';var React = __webpack_require__(1);var\nnode = React.PropTypes.node;\n\nexports.Table = React.createClass({\n  displayName: 'IndexTable.Table',\n  propTypes: {\n    children: node },\n\n\n  render: function render() {\n    return (\n      React.createElement('table', { className: 'index-table' },\n        React.createElement('tbody', null, this.props.children)));\n\n\n  } });\n\n\nexports.Row = React.createClass({\n  displayName: 'IndexTable.Row',\n  propTypes: {\n    children: node },\n\n\n  render: function render() {\n    return (\n      React.createElement('tr', { className: 'index-table__row' }, this.props.children));\n\n  } });\n\n\nexports.Column = React.createClass({\n  displayName: 'IndexTable.Column',\n  propTypes: {\n    children: node },\n\n\n  render: function render() {\n    return (\n      React.createElement('td', { className: 'index-table__column' }, this.props.children));\n\n  } });\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-html-serializer/ui/shared/components/IndexTable.js\n ** module id = 252\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./packages/megadoc-html-serializer/ui/shared/components/IndexTable.js?");

/***/ },

/***/ 253:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';var _require = __webpack_require__(180),Outlet = _require.Outlet;\n\nmodule.exports = Outlet;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-html-serializer/ui/shared/components/Outlet.js\n ** module id = 253\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./packages/megadoc-html-serializer/ui/shared/components/Outlet.js?");

/***/ },

/***/ 254:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';var React = __webpack_require__(1);var _React$PropTypes =\nReact.PropTypes,bool = _React$PropTypes.bool,string = _React$PropTypes.string,func = _React$PropTypes.func,any = _React$PropTypes.any;\n\nvar Radio = React.createClass({ displayName: 'Radio',\n  propTypes: {\n    checked: bool,\n    value: string,\n    onChange: func,\n    children: any,\n    className: string,\n    name: string },\n\n\n  render: function render() {\n    return (\n      React.createElement('label', { className: (this.props.className || '') + ' radio' },\n        React.createElement('input', {\n          type: 'radio',\n          className: 'radio__indicator',\n          checked: this.props.checked,\n          name: this.props.name,\n          value: this.props.value,\n          onChange: this.props.onChange }),\n\n\n        this.props.children));\n\n\n  } });\n\n\n\nmodule.exports = Radio;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-html-serializer/ui/shared/components/Radio.js\n ** module id = 254\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./packages/megadoc-html-serializer/ui/shared/components/Radio.js?");

/***/ },

/***/ 255:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';var Outlet = __webpack_require__(253);\nvar CorpusAPI = __webpack_require__(232);\n\n/**\n                                         * @module megadoc\n                                         * @singleton\n                                         */\nmodule.exports = function createMegadoc(config) {\n  var exports = {};\n  var previewHandlers = [];\n  var callbacks = [];\n  var ran = 0;\n  var corpusAPI = CorpusAPI(config.database || [], { redirect: config.redirect });\n\n  var pluginAPI = {\n    outlets: Outlet,\n    corpus: corpusAPI,\n\n    registerPreviewHandler: function registerPreviewHandler(fn) {\n      previewHandlers.push(fn);\n    } };\n\n\n  function seal() {\n    exports.use = function () {\n      console.warn(\n      \"You are attempting to call 'megadoc.use()' after all plugins were \" +\n      \"loaded. This probably means you forgot to register your \" +\n      \"script as a plugin script.\");\n\n    };\n\n    callbacks.forEach(function (callback) {\n      callback();\n    });\n  }\n\n  /**\n     * @method megadoc.use\n     *\n     * @param {Function} pluginEntryRunner\n     *        The function that will register your plugin.\n     *\n     * @param {PluginRegistrar} pluginEntryRunner.api\n     *        The plugin registration API you can use.\n     */\n  exports.use = function (pluginName, plugin) {\n    var newSignature = arguments.length === 2;\n\n    setTimeout(function () {\n      if (newSignature) {\n        use(pluginName, plugin);\n      } else\n      {\n        use(pluginName);\n      }\n    }, 0);\n  };\n\n  /**\n      * @method megadoc.use\n      *\n      * @param {Function} pluginEntryRunner\n      *        The function that will register your plugin.\n      *\n      * @param {PluginRegistrar} pluginEntryRunner.api\n      *        The plugin registration API you can use.\n      */\n  exports.useTheme = function (themeName, plugin) {\n    setTimeout(function () {\n      try {\n        console.log('Loading theme plugin \"%s\".', themeName);\n\n        plugin(pluginAPI, config.themeOptions || {});\n      }\n      catch (e) {\n        console.error('A plugin (%s) failed to load, it will be ignored.', themeName);\n        console.error(e.stack || e);\n      } finally\n      {\n        console.log('Plugin \"%s\" has been loaded - %d remain.', themeName, config.pluginCount - ran - 1);\n\n        if (++ran === config.pluginCount) {\n          console.log('All %d/%d plugins have been loaded, no more may be loaded from now on.', ran, config.pluginCount);\n\n          seal();\n        }\n      }\n    }, 0);\n  };\n\n  function use(pluginName, plugin) {\n    var args = [];\n\n    if (arguments.length === 1) {\n      plugin = pluginName;\n      pluginName = plugin.name;\n      args = [pluginAPI];\n    } else\n    {\n      args = [\n      pluginAPI,\n      corpusAPI.getNamespacesForPlugin(pluginName).map(function (x) {return x.config;})];\n\n    }\n\n    try {\n      console.log('Loading \"%s\".', plugin.name);\n\n      plugin.apply(null, args);\n    }\n    catch (e) {\n      console.error('A plugin (%s) failed to load, it will be ignored.', plugin.name);\n      console.error(e.stack || e);\n    } finally\n    {\n      console.log('Plugin \"%s\" has been loaded - %d remain.', plugin.name, config.pluginCount - ran - 1);\n\n      if (++ran === config.pluginCount) {\n        console.log('All %d/%d plugins have been loaded, no more may be loaded from now on.', ran, config.pluginCount);\n\n        seal();\n      }\n    }\n  };\n\n  exports.getPreviewHandlers = function () {\n    return previewHandlers;\n  };\n\n  exports.onReady = function (callback) {\n    console.log('Will start as soon as %d plugins are loaded.', config.pluginCount - ran);\n\n    if (ran === config.pluginCount) {\n      callback();\n    } else\n    {\n      callbacks.push(callback);\n    }\n  };\n\n  /**\n      * @property {UI.Corpus}\n      *           The Corpus API for plugins to use.\n      */\n  exports.corpus = corpusAPI;\n\n  exports.regenerateCorpus = function (nextShallowCorpus) {\n    exports.corpus = corpusAPI = CorpusAPI(nextShallowCorpus);\n  };\n\n  return exports;\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-html-serializer/ui/shared/core/megadoc.js\n ** module id = 255\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./packages/megadoc-html-serializer/ui/shared/core/megadoc.js?");

/***/ },

/***/ 256:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};var invariant = __webpack_require__(174);\n\n/**\n                                                                                                                                                                                                                                                                                                                                   * A module for adjusting the document's title for a while then restoring it.\n                                                                                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                                                                                   * @param  {Function} generate\n                                                                                                                                                                                                                                                                                                                                   *         A function that must yield the new title (if any) when the manager\n                                                                                                                                                                                                                                                                                                                                   *         is asked to update.\n                                                                                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                                                                                   * @return {Object} titleMgr\n                                                                                                                                                                                                                                                                                                                                   */\nfunction MetaDescriptionManager(generate) {\n  var originalValue = getMetaDescription() || ''; // we'll track it on the first call to #update()\n\n  invariant(generate instanceof Function, 'You must provide a meta description generator function to MetaDescriptionManager, got ' + (typeof\n  generate === 'undefined' ? 'undefined' : _typeof(generate)) + '.');\n\n\n  return {\n    /**\n            * Call this any-time you suspect the title needs updating (that is, the\n            * generator might yield different results than the last update.)\n            *\n            * @return {Boolean}\n            *         Whether the title was updated or not.\n            */\n    update: function update() {\n      var newValue = generate.apply(null, arguments);\n\n      if (newValue && newValue !== getMetaDescription()) {\n        setMetaDescription(newValue);\n\n        return true;\n      } else\n      {\n        return false;\n      }\n    },\n\n    /**\n        * Restore the document title to what it was before this instance\n        * started fuddling with the title.\n        *\n        * @async\n        * @return {Boolean}\n        *         Whether there were any restorations to apply to the title.\n        */\n    restore: function restore() {\n      if (originalValue !== getMetaDescription()) {\n        setMetaDescription(originalValue);\n\n        return true;\n      }\n    } };\n\n}\n\nfunction getMetaDescription() {\n  return document.querySelector('meta[name=\"description\"]').content;\n}\n\nfunction setMetaDescription(value) {\n  document.querySelector('meta[name=\"description\"]').content = value;\n}\n\nmodule.exports = MetaDescriptionManager;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-html-serializer/ui/shared/core/MetaDescriptionManager.js\n ** module id = 256\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./packages/megadoc-html-serializer/ui/shared/core/MetaDescriptionManager.js?");

/***/ },

/***/ 257:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};var invariant = __webpack_require__(174);\n\n/**\n                                                                                                                                                                                                                                                                                                                                   * A module for adjusting the document's title for a while then restoring it.\n                                                                                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                                                                                   * @param  {Function} generateTitle\n                                                                                                                                                                                                                                                                                                                                   *         A function that must yield the new title (if any) when the manager\n                                                                                                                                                                                                                                                                                                                                   *         is asked to update.\n                                                                                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                                                                                   * @return {Object} titleMgr\n                                                                                                                                                                                                                                                                                                                                   */\nfunction TitleManager(generateTitle, _ref) {var defaultTitle = _ref.defaultTitle;\n  var previousTitle; // we'll track it on the first call to #update()\n\n  invariant(generateTitle instanceof Function, 'You must provide a title generator function to TitleManager, got ' + (typeof\n  generateTitle === 'undefined' ? 'undefined' : _typeof(generateTitle)) + '.');\n\n\n  return {\n    /**\n            * Call this any-time you suspect the title needs updating (that is, the\n            * generator might yield different results than the last update.)\n            *\n            * @return {Boolean}\n            *         Whether the title was updated or not.\n            */\n    update: function update() {\n      var newTitle = generateTitle.apply(null, arguments);\n\n      if (newTitle && newTitle !== document.title) {\n        if (!previousTitle) {// track the \"anchor\" title if we haven't yet\n          previousTitle = document.title;\n        }\n\n        document.title = newTitle + ' - ' + defaultTitle;\n\n        return true;\n      } else\n      {\n        return false;\n      }\n    },\n\n    /**\n        * Restore the document title to what it was before this instance\n        * started fuddling with the title.\n        *\n        * @async\n        * @return {Boolean}\n        *         Whether there were any restorations to apply to the title.\n        */\n    restore: function restore() {\n      if (previousTitle && previousTitle !== document.title) {\n        setTimeout(function () {\n          document.title = previousTitle;\n        }, TitleManager.TIMEOUT);\n\n        return true;\n      }\n    } };\n\n}\n\nTitleManager.TIMEOUT = 2;\n\nmodule.exports = TitleManager;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-html-serializer/ui/shared/core/TitleManager.js\n ** module id = 257\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./packages/megadoc-html-serializer/ui/shared/core/TitleManager.js?");

/***/ },

/***/ 258:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';var MetaDescriptionManager = __webpack_require__(256);\nvar IDENTITY = function IDENTITY(arg) {\n  return arg;\n};\n\nmodule.exports = function (generate) {\n  var manager = void 0;\n\n  if (typeof generate === 'string') {\n    generate = IDENTITY.bind(null, generate);\n  }\n\n  return {\n    componentWillMount: function componentWillMount() {\n      manager = MetaDescriptionManager(generate.bind(this));\n    },\n\n    componentDidMount: function componentDidMount() {\n      manager.update();\n    },\n\n    componentDidUpdate: function componentDidUpdate() {\n      manager.update();\n    },\n\n    componentWillUnmount: function componentWillUnmount() {\n      manager.restore();\n      manager = null;\n    } };\n\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-html-serializer/ui/shared/mixins/HasMetaDescription.js\n ** module id = 258\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./packages/megadoc-html-serializer/ui/shared/mixins/HasMetaDescription.js?");

/***/ },

/***/ 259:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';var TitleManager = __webpack_require__(257);var _require =\n__webpack_require__(1),PropTypes = _require.PropTypes;\nvar IDENTITY = function IDENTITY(arg) {\n  return arg;\n};\n\nmodule.exports = function (generateTitle) {\n  var titleManager;\n\n  if (typeof generateTitle === 'string') {\n    generateTitle = IDENTITY.bind(null, generateTitle);\n  }\n\n  return {\n    contextTypes: {\n      config: PropTypes.shape({\n        title: PropTypes.string }).\n      isRequired },\n\n\n    componentWillMount: function componentWillMount() {\n      titleManager = new TitleManager(generateTitle.bind(this), {\n        defaultTitle: this.context.config.title });\n\n    },\n\n    componentDidMount: function componentDidMount() {\n      titleManager.update();\n    },\n\n    componentDidUpdate: function componentDidUpdate() {\n      titleManager.update();\n    },\n\n    componentWillUnmount: function componentWillUnmount() {\n      titleManager.restore();\n      titleManager = null;\n    } };\n\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-html-serializer/ui/shared/mixins/HasTitle.js\n ** module id = 259\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./packages/megadoc-html-serializer/ui/shared/mixins/HasTitle.js?");

/***/ },

/***/ 260:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';var _require = __webpack_require__(32),findDOMNode = _require.findDOMNode;\nvar scrollIntoView = __webpack_require__(261);\nvar SIDEBAR_SELECTOR = '.resizable-panel__content';\n\nfunction JumperMixin(locateElement, offset) {var parentNodeSelector = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : SIDEBAR_SELECTOR;\n  function jump(component, props) {\n    var element = locateElement.call(component, props);\n\n    if (element === false) {\n      return false;\n    } else\n    if (element) {\n      scrollIntoView(\n      findDOMNode(element),\n      document.querySelector(parentNodeSelector),\n      offset);\n\n\n      return true;\n    } else\n    {\n      console.warn('Unable to jump to element; node not found.');\n      return false;\n    }\n  }\n\n  return {\n    componentDidMount: function componentDidMount() {\n      jump(this, this.props);\n    },\n\n    componentDidUpdate: function componentDidUpdate() {\n      jump(this, this.props);\n    } };\n\n}\n\nJumperMixin.SIDEBAR_SELECTOR = SIDEBAR_SELECTOR;\n\nmodule.exports = JumperMixin;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-html-serializer/ui/shared/mixins/JumperMixin.js\n ** module id = 260\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./packages/megadoc-html-serializer/ui/shared/mixins/JumperMixin.js?");

/***/ },

/***/ 261:
/***/ function(module, exports) {

	eval("\"use strict\";module.exports = function scrollIntoView(node, scrollableNode) {var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var targetY = node.offsetTop + offset;\n  var needsScrolling = false;\n\n  if (scrollableNode.scrollTop > targetY) {\n    needsScrolling = true;\n  } else\n  if (scrollableNode.scrollTop + scrollableNode.offsetHeight < targetY) {\n    needsScrolling = true;\n  }\n\n  if (needsScrolling) {\n    scrollElementTo(scrollableNode, targetY, 500);\n  }\n};\n\nfunction scrollElementTo(element, to) {var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 500;\n  var start = element.scrollTop;\n  var change = to - start;\n  var increment = 20;\n  var currentTime = 0;\n\n  function animateScroll() {\n    currentTime += increment;\n    element.scrollTop = easeInOutQuad(currentTime, start, change, duration);\n\n    if (duration > 0 && currentTime < duration) {\n      setTimeout(animateScroll, increment);\n    }\n  }\n\n  animateScroll();\n}\n\n//t = current time\n//b = start value\n//c = change in value\n//d = duration\nfunction easeInOutQuad(t, b, c, d) {\n  t /= d / 2;\n  if (t < 1) return c / 2 * t * t + b;\n  t--;\n  return -c / 2 * (t * (t - 2) - 1) + b;\n}\n\n/*****************\n ** WEBPACK FOOTER\n ** ./packages/megadoc-html-serializer/ui/shared/utils/scrollIntoView.js\n ** module id = 261\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./packages/megadoc-html-serializer/ui/shared/utils/scrollIntoView.js?");

/***/ }

})
});
;